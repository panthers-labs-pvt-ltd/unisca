<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pantherslabs.chimera</groupId>
    <artifactId>unisca</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <name>Pipeline_Metadata_API</name>
  <description>The pipeline_metadata_api module provide rest api services to connect and perform SELECT, INSERT, UPDATE, DELETE on the pipeline metadata postgres tables.</description>
  <url>https://github.com/panthers-labs-pvt-ltd/unisca/tree/main/pipeline_metadata_api</url>
  <artifactId>unisca.pipeline_metadata_api</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring-cloud.version>2024.0.0</spring-cloud.version>
    <org.mybatis.spring.boot.version>3.0.4</org.mybatis.spring.boot.version>
    <org.mybatis.dynamic-sql.version>1.5.2</org.mybatis.dynamic-sql.version>
    <springdoc-openapi-starter-webmvc-ui.version>2.8.4</springdoc-openapi-starter-webmvc-ui.version>
    <jakarta.validation.version>3.1.0</jakarta.validation.version>
    <com.google.code.gson.version>2.10.1</com.google.code.gson.version>
    <exec-maven-plugin.version>3.4.1</exec-maven-plugin.version>
    <flyway-url>jdbc:postgresql://127.0.0.1:5432/business_value</flyway-url>
    <flyway-user>owner_business_value</flyway-user>
    <flyway-password>owner_business_value</flyway-password>
  </properties>

  <dependencies>
    <!-- Spring Boot Starter (includes core functionality for a Spring Boot application) -->
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-aop</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <!-- MyBatis Spring Boot Starter (MyBatis integration with Spring Boot) -->
    <dependency>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <groupId>org.mybatis.spring.boot</groupId>
      <version>${org.mybatis.spring.boot.version}</version>
    </dependency>
    <dependency>
      <artifactId>mybatis-dynamic-sql</artifactId>
      <groupId>org.mybatis.dynamic-sql</groupId>
      <version>${org.mybatis.dynamic-sql.version}</version>
    </dependency>
    <!-- Spring Boot Starter JDBC (Required for MyBatis to function correctly) -->
    <dependency>
      <artifactId>spring-boot-starter-jdbc</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>tomcat-jdbc</artifactId>
          <groupId>org.apache.tomcat</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <!-- Spring Boot Starter Security -->
    <dependency>
      <artifactId>spring-boot-starter-security</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <!-- OAuth2 Resource Server -->
    <dependency>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
      <groupId>org.springframework.cloud</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <artifactId>unisca.logging</artifactId>
      <groupId>org.pantherslabs.chimera</groupId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <artifactId>jakarta.validation-api</artifactId>
      <groupId>jakarta.validation</groupId>
      <version>${jakarta.validation.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <dependency>
      <artifactId>gson</artifactId>
      <groupId>com.google.code.gson</groupId>
      <version>${com.google.code.gson.version}</version>
    </dependency>
    <!-- Flyway dependency -->
    <!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-core -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-database-postgresql</artifactId>
      <version>${flyway-database-postgresql-version}</version>
      <scope>runtime</scope>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>org.pantherslabs.chimera.unisca</groupId>-->
<!--      <artifactId>api-nexus.api-nexus-swagger-docs</artifactId>-->
<!--      <version>1.0-SNAPSHOT</version>-->
<!--    </dependency>-->

    <dependency>
      <groupId>org.pantherslabs.chimera</groupId>
      <artifactId>api-nexus-swagger-docs</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>exec</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>

<!--      <plugin>-->
<!--        <groupId>org.codehaus.mojo</groupId>-->
<!--        <artifactId>exec-maven-plugin</artifactId>-->
<!--        <version>${exec-maven-plugin.version}</version>-->
<!--        <executions>-->
<!--            <execution>-->
<!--                <id>initialize</id>-->
<!--                <phase>initialize</phase>-->
<!--                <goals>-->
<!--                  <goal>java</goal>-->
<!--                </goals>-->
<!--                <configuration>-->
<!--                  <mainClass>org.pantherslabs.chimera.unisca.pipeline_metadata_api.CheckDatabaseConnection</mainClass>-->
<!--                  <arguments>-->
<!--                    <argument>${flyway-url}</argument>-->
<!--                    <argument>${flyway-user}</argument>-->
<!--                    <argument>${flyway-password}</argument>-->
<!--                  </arguments>-->
<!--                </configuration>-->
<!--            </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <groupId>org.flywaydb</groupId>-->
<!--        <artifactId>flyway-maven-plugin</artifactId>-->
<!--        <version>${flyway-maven-plugin-version}</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <phase>install</phase>-->
<!--            <goals>-->
<!--              <goal>migrate</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--        <configuration>-->
<!--          <url>${flyway-url}</url>-->
<!--          <user>${flyway-user}</user>-->
<!--          <password>${flyway-password}</password>-->
<!--          &lt;!&ndash; Update the URL to point to your actual database, this config is as per my DB &ndash;&gt;-->
<!--          <defaultSchema>public</defaultSchema>-->
<!--          <schemas>-->
<!--            <schema>public</schema>-->
<!--          </schemas>-->
<!--          <locations>-->
<!--            <location>filesystem:src/main/resources/migration</location>-->
<!--          </locations>-->
<!--        </configuration>-->
<!--      </plugin>-->
    </plugins>
  </build>
</project>