DROP TABLE IF EXISTS FILE_EXTRACT_METADATA_CONFIG CASCADE;
CREATE TABLE IF NOT EXISTS FILE_EXTRACT_METADATA_CONFIG (
  FILE_NAME              VARCHAR(255),
  FILE_PATH              VARCHAR(4000),
  SCHEMA_PATH            VARCHAR(4000),
 -- SOURCE_CONFIGURATION 	 TEXT,
  SIZE_IN_BYTE           BIGINT,
  COMPRESSION_TYPE       VARCHAR(50),
  CONSTRAINT fk_pipeline_name FOREIGN KEY (PIPELINE_NAME) REFERENCES DATA_PIPELINES(PIPELINE_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_data_source FOREIGN KEY (EXTRACT_SOURCE_TYPE, EXTRACT_SOURCE_SUB_TYPE) REFERENCES DATA_SOURCES(DATA_SOURCE_TYPE, DATA_SOURCE_SUB_TYPE) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT uq_pipeline_name_sequence_number_file UNIQUE (PIPELINE_NAME, SEQUENCE_NUMBER)
  ) INHERITS (EXTRACT_METADATA_CONFIG);



INSERT INTO FILE_EXTRACT_METADATA_CONFIG (PIPELINE_NAME, SEQUENCE_NUMBER, EXTRACT_SOURCE_TYPE, EXTRACT_SOURCE_SUB_TYPE, FILE_NAME, FILE_PATH, SCHEMA_PATH, dataframe_name, PREDECESSOR_SEQUENCES, SUCCESSOR_SEQUENCES, ROW_FILTER, COLUMN_FILTER, SOURCE_CONFIGURATION, SIZE_IN_BYTE, COMPRESSION_TYPE, created_by, updated_timestamp, updated_by) VALUES 
  ('Test_Pipeline', 1, 'Files', 'Csv', 'test.csv', '/tmp/test.csv', '/tmp/schema.json','file_df', 0, 2, null, null, '{"delimiter": ",", "header": true}', 1000, 'GZIP', 'PK', null, null);

  SELECT * FROM FILE_EXTRACT_METADATA_CONFIG;

  TRUNCATE file_extract_metadata_config;