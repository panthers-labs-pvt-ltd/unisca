CREATE TABLE IF NOT EXISTS STREAMS_EXTRACT_METADATA_CONFIG (
  KAFKA_CONSUMER_TOPIC          VARCHAR(1000),
  KAFKA_CONSUMER_GROUP          VARCHAR(100),
  KAFKA_STRT_OFFSET             TEXT,
  KAFKA_MAX_OFFSET              VARCHAR(255),
  KAFKA_POLL_TIMEOUT            INTEGER,
  TRANCTNL_CNSUMR_FLG           VARCHAR(255) DEFAULT 'N' :: BPCHAR,
  WATRMRK_DURATION              VARCHAR(255),
  STG_FORMT                     VARCHAR(255),
  STG_PATH                      VARCHAR(500),
  STG_PARTITIONS                VARCHAR(500),
 -- DATA_SOURCE_CONNECTION_NAME   VARCHAR(255),
  CONSTRAINT fk_data_source_connection FOREIGN KEY (DATA_SOURCE_CONNECTION_NAME) REFERENCES DATA_SOURCES_CONNECTIONS(DATA_SOURCE_CONNECTION_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_pipeline_name FOREIGN KEY (PIPELINE_NAME) REFERENCES DATA_PIPELINES(PIPELINE_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_data_source FOREIGN KEY (EXTRACT_SOURCE_TYPE, EXTRACT_SOURCE_SUB_TYPE) REFERENCES DATA_SOURCES(DATA_SOURCE_TYPE, DATA_SOURCE_SUB_TYPE) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT uq_pipeline_name_sequence_number_stream UNIQUE (PIPELINE_NAME, SEQUENCE_NUMBER)
  ) INHERITS (EXTRACT_METADATA_CONFIG);

  INSERT INTO STREAMS_EXTRACT_METADATA_CONFIG (PIPELINE_NAME, SEQUENCE_NUMBER, EXTRACT_SOURCE_TYPE, EXTRACT_SOURCE_SUB_TYPE, PREDECESSOR_SEQUENCES, SUCCESSOR_SEQUENCES, 
  KAFKA_CONSUMER_TOPIC, KAFKA_CONSUMER_GROUP, KAFKA_STRT_OFFSET, KAFKA_MAX_OFFSET, KAFKA_POLL_TIMEOUT, TRANCTNL_CNSUMR_FLG, WATRMRK_DURATION, DATAFRAME_NAME, source_configuration, STG_FORMT, STG_PATH, STG_PARTITIONS,
   CREATED_BY, UPDATED_BY, UPDATED_TIMESTAMP) VALUES
   ('Test_Pipeline', 4, 'Stream', 'Kafka', '1', '3', 'test_topic', 'test_group', 'earliest', 'latest', 1000, 'N', '1000', 'DF_kafka', null, 'parquet', '/tmp', '1', 'admin', null, null);

   select * from streams_extract_metadata_config;


